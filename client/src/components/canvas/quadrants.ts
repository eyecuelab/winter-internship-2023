export const generateMapQuadrants = () => {
  const randomNumberSelector = () => {
    return Math.floor(Math.random() * 6);
  };

  return {
    i: randomNumberSelector(),
    ii: randomNumberSelector(),
    iii: randomNumberSelector(),
    iv: randomNumberSelector(),
  };
};

export const quadrants = [
  [
    // A
    ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"],
    ["-", "s", ".", ".", ".", ".", ".", ".", ".", ".", "."],
    ["-", ".", "-", ".", "-", "-", "-", ".", "-", ".", "."],
    ["-", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
    ["-", ".", "-", "-", ".", ".", ".", "-", "-", ".", "."],
    ["-", ".", ".", ".", ".", "-", ".", ".", ".", ".", "."],
    ["-", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
  ], //    H              H              H
  [
    // L
    ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"],
    ["-", "s", ".", ".", ".", ".", ".", ".", ".", ".", "."],
    ["-", ".", "-", ".", "-", "-", "-", ".", "-", ".", "-"],
    ["-", ".", "-", ".", ".", ".", ".", ".", ".", ".", "-"],
    ["-", ".", "-", "-", ".", ".", ".", "-", "-", ".", "-"],
    ["-", ".", "-", ".", ".", "-", ".", ".", "-", ".", "."],
    ["-", ".", ".", ".", ".", "-", ".", ".", ".", ".", "."],
  ], //    H              H              H
  [
    // tubes
    ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"],
    ["-", "s", ".", ".", ".", ".", ".", ".", ".", ".", "."],
    ["-", ".", ".", "-", "-", "-", "-", "-", ".", ".", "-"],
    ["-", ".", ".", ".", ".", ".", ".", ".", ".", ".", "-"],
    ["-", ".", "-", "-", "-", "-", "-", "-", "-", ".", "-"],
    ["-", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
    ["-", ".", "-", "-", ".", "-", "-", ".", "-", "-", "."],
  ], //    H              H              H
  [
    // verts
    ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"],
    ["-", "s", ".", ".", ".", "-", ".", ".", ".", ".", "."],
    ["-", ".", ".", "-", ".", "-", ".", ".", "-", ".", "."],
    ["-", ".", ".", "-", ".", "-", ".", ".", "-", ".", "."],
    ["-", ".", ".", "-", ".", "-", ".", ".", "-", ".", "."],
    ["-", ".", ".", "-", ".", "-", ".", ".", "-", ".", "."],
    ["-", ".", ".", "-", ".", ".", ".", ".", "-", ".", "."],
  ], //    H              H              H
  [
    // donut
    ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"],
    ["-", "s", ".", ".", "-", "-", "-", "-", ".", ".", "."],
    ["-", ".", "-", ".", "-", ".", ".", ".", ".", "-", "."],
    ["-", ".", "-", ".", "-", ".", "-", "-", ".", "-", "."],
    ["-", ".", ".", ".", ".", ".", ".", ".", ".", "-", "."],
    ["-", ".", "-", ".", "-", "-", "-", "-", "-", "-", "."],
    ["-", ".", "-", ".", ".", ".", ".", ".", ".", ".", "."],
  ], //    H              H              H
  [
    // invader
    ["-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-"],
    ["-", "s", ".", ".", "-", "-", "-", "-", "-", ".", "."],
    ["-", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
    ["-", ".", ".", "-", ".", ".", ".", ".", "-", ".", "."],
    ["-", ".", ".", "-", ".", ".", ".", ".", "-", ".", "."],
    ["-", ".", "-", "-", "-", ".", ".", "-", "-", "-", "."],
    ["-", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
  ], //    H              H              H
];
